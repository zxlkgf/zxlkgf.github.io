<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Cyo&#39;s Website</title>
        <link>http://example.org/</link>
        <description>Cyo&#39;s website</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>z514111073@gmail.com (Cyo)</managingEditor>
            <webMaster>z514111073@gmail.com (Cyo)</webMaster><lastBuildDate>Fri, 03 Mar 2023 09:55:47 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>线程同步&#43;锁</title>
    <link>http://example.org/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/</link>
    <pubDate>Fri, 03 Mar 2023 09:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/</guid>
    <description><![CDATA[线程同步 1.线程的主要优势在于，能够通过全局变量来共享信息。不过，这种便捷的共享是有代价的，必须确保多个线程不会同时修改同一个变量，或者某个]]></description>
</item>
<item>
    <title>线程</title>
    <link>http://example.org/%E7%BA%BF%E7%A8%8B/</link>
    <pubDate>Thu, 02 Mar 2023 23:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E7%BA%BF%E7%A8%8B/</guid>
    <description><![CDATA[线程概述 1.与进程(process)类似，线程(thread)是允许应用程序并发执行多个任务的一种机制。一个进程可以包含多个线程。同一个程序]]></description>
</item>
<item>
    <title>共享内存</title>
    <link>http://example.org/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</link>
    <pubDate>Thu, 02 Mar 2023 08:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</guid>
    <description><![CDATA[共享内存 1.共享内存允许两个或者多个进程共享物理内存的同一块区域(通常被称为段)。由于一个共享内存段会称为一个进程用户空间的一部分。因此这种]]></description>
</item>
<item>
    <title>守护进程</title>
    <link>http://example.org/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</link>
    <pubDate>Thu, 02 Mar 2023 08:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</guid>
    <description><![CDATA[终端 1.在UNIX系统中，用户通过终端登陆系统后得到一个shell进程，这个终端成为shell进程的控制终端(Controlling Term]]></description>
</item>
<item>
    <title>信号</title>
    <link>http://example.org/%E4%BF%A1%E5%8F%B7/</link>
    <pubDate>Wed, 01 Mar 2023 20:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E4%BF%A1%E5%8F%B7/</guid>
    <description><![CDATA[信号的概念 1.信号是Linux进程间通信的最古老的方式之一，是事件发生时对进程的通知机制，有时也称之为软件中断，它是在软件层次上对中断机制的]]></description>
</item>
<item>
    <title>内存映射</title>
    <link>http://example.org/%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84/</link>
    <pubDate>Wed, 01 Mar 2023 13:29:27 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84/</guid>
    <description><![CDATA[内存映射 内存映射(Memory-mapped I/O)是将磁盘文件的数据映射到内存，用户通过修改内存就能修改磁盘文件。 内存映射相关系统调用 #include &lt;sys/mman.h&gt;]]></description>
</item>
<item>
    <title>进程间通信概念</title>
    <link>http://example.org/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E6%A6%82%E5%BF%B5/</link>
    <pubDate>Wed, 01 Mar 2023 09:42:58 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E4%BF%A1%E6%A6%82%E5%BF%B5/</guid>
    <description><![CDATA[进程间通讯概念 1.进程是一个独立的资源分配单元，不同的进程(用户进程)之间的资源是独立的，没有关联，不能在一个进程中直接访问另一个进程的资源]]></description>
</item>
<item>
    <title>Hugo &#43; GitHub Action &#43; 腾讯云 搭建你的博客自动发布系统</title>
    <link>http://example.org/gitaction_hugo/</link>
    <pubDate>Tue, 28 Feb 2023 09:26:25 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/gitaction_hugo/</guid>
    <description><![CDATA[关于Hugo在GitAction部署期间的问题 参参照网站: 1.利用GitHub Action实现Hugo博客在GitHub Pages自动部署(]]></description>
</item>
<item>
    <title>Socket通信</title>
    <link>http://example.org/socket%E9%80%9A%E4%BF%A1/</link>
    <pubDate>Thu, 16 Feb 2023 14:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/socket%E9%80%9A%E4%BF%A1/</guid>
    <description><![CDATA[socket编程有三种 1.流式套接字(SOCKET_STREAM) 2.数据报式套接字(SOCKET_DGRAM) 3,原始套接字(SOCKET]]></description>
</item>
<item>
    <title>exec函数族</title>
    <link>http://example.org/exec%E5%87%BD%E6%95%B0%E6%97%8F/</link>
    <pubDate>Tue, 07 Feb 2023 20:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/exec%E5%87%BD%E6%95%B0%E6%97%8F/</guid>
    <description><![CDATA[exec函数族介绍 1.exec函数族的作用是根据指定的文件名找到可执行文件，并用它来取代调用进程的内容，换句话说，就是在调用进程内部执行一个]]></description>
</item>
</channel>
</rss>
