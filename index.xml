<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Cyo&#39;s Website</title>
        <link>http://example.org/</link>
        <description>Cyo&#39;s website</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>z514111073@gmail.com (Cyo)</managingEditor>
            <webMaster>z514111073@gmail.com (Cyo)</webMaster><lastBuildDate>Wed, 08 Mar 2023 18:59:14 &#43;0800</lastBuildDate>
            <atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>力扣hot100_8_三数之和</title>
    <link>http://example.org/%E5%8A%9B%E6%89%A3hot8_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
    <pubDate>Wed, 08 Mar 2023 18:59:14 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8A%9B%E6%89%A3hot8_%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
    <description><![CDATA[三数之和 三数之和 题目: 给你一个整数数组 nums ，判断是否存在三元组 [nums[i], nums[j], nums[k]] 满足 i != j、i != k 且 j != k ，同时还满足 nums[i] + nums[j] + nums[k] == 0 。请 你返回所有和为 0 且]]></description>
</item>
<item>
    <title>力扣hot100_7_盛最多水的容器</title>
    <link>http://example.org/%E5%8A%9B%E6%89%A3hot7_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</link>
    <pubDate>Wed, 08 Mar 2023 15:59:14 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8A%9B%E6%89%A3hot7_%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8/</guid>
    <description><![CDATA[盛最多水的容器 盛最多水的容器 题目: 给定一个长度为 n 的整数数组 height 。有 n 条垂线，第 i 条线的两个端点是 (i, 0) 和 (i, height[i]) 。 找出其中的两条线，使得它们与 x 轴]]></description>
</item>
<item>
    <title>力扣hot100_5_最长回文子串</title>
    <link>http://example.org/%E5%8A%9B%E6%89%A3hot5_%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</link>
    <pubDate>Wed, 08 Mar 2023 14:59:14 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8A%9B%E6%89%A3hot5_%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</guid>
    <description><![CDATA[最长回文子串 最长回文子串 题目: 给你一个字符串 s，找到 s 中最长的回文子串。 如果字符串的反序与原始字符串相同，则该字符串称为回文字符串。 示例1 输]]></description>
</item>
<item>
    <title>力扣hot100_3_无重复字符的最长子串</title>
    <link>http://example.org/%E5%8A%9B%E6%89%A3hot3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</link>
    <pubDate>Tue, 07 Mar 2023 23:59:14 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8A%9B%E6%89%A3hot3_%E6%97%A0%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E6%9C%80%E9%95%BF%E5%AD%90%E4%B8%B2/</guid>
    <description><![CDATA[无重复字符的最长子串 无重复字符的最长子串 题目: 给定一个字符串 s ，请你找出其中不含有重复字符的最长子串的长度。 示例1 输入: s = &#34;abcabcbb&#34; 输出: 3 解释:]]></description>
</item>
<item>
    <title>力扣hot100_2_两数相加</title>
    <link>http://example.org/%E5%8A%9B%E6%89%A3hot2_%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</link>
    <pubDate>Tue, 07 Mar 2023 22:59:14 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8A%9B%E6%89%A3hot2_%E4%B8%A4%E6%95%B0%E7%9B%B8%E5%8A%A0/</guid>
    <description><![CDATA[两数相加 两数相加 题目: 给你两个非空的链表，表示两个非负的整数。它们每位数字都是按照逆序的方式存储的，并且每个节点只能存储 一位数字。 请你将两个]]></description>
</item>
<item>
    <title>力扣hot100_1_两数之和</title>
    <link>http://example.org/%E5%8A%9B%E6%89%A3hot1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
    <pubDate>Tue, 07 Mar 2023 21:59:14 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8A%9B%E6%89%A3hot1_%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
    <description><![CDATA[两数之和 两数之和 题目： 给定一个整数数组nums和一个整数目标值target，请你在该数组中找出和为目标值 target 的那两个整数,并返回它们的数组下标]]></description>
</item>
<item>
    <title>阻塞/阻塞_同步/异步</title>
    <link>http://example.org/%E9%98%BB%E5%A1%9E_%E9%9D%9E%E9%98%BB%E5%A1%9E/</link>
    <pubDate>Mon, 06 Mar 2023 13:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E9%98%BB%E5%A1%9E_%E9%9D%9E%E9%98%BB%E5%A1%9E/</guid>
    <description><![CDATA[1.阻塞/非阻塞,同步/异步 典型的一次IO的两个阶段：数据的就绪和数据的读写 数据就绪:根据系统IO操作的就绪状态 1.阻塞 调用IO方法的线程进]]></description>
</item>
<item>
    <title>UDP</title>
    <link>http://example.org/udp%E9%80%9A%E4%BF%A1/</link>
    <pubDate>Mon, 06 Mar 2023 08:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/udp%E9%80%9A%E4%BF%A1/</guid>
    <description><![CDATA[UDP UDP通信 #include &lt;sys/types.h&gt; #include &lt;sys/socket.h&gt; ssize_t sendto(int sockfd,const void *buf,size_t len,int flags,const struct sockaddr *dest_addr,socklen_t addrlen); 参数: -sockfd：通信的fd -buf:需要发送的数据 -len:数组的大小 -flags:设置一些]]></description>
</item>
<item>
    <title>IO多路复用(select,poll,epoll)</title>
    <link>http://example.org/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link>
    <pubDate>Sun, 05 Mar 2023 14:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid>
    <description><![CDATA[IO多路复用 I/O 多路复用使得程序能够同时监听多个文件描述符，能够提高程序的性能，Linux下实现I/O多路复用的系统调用主要有select ，p]]></description>
</item>
<item>
    <title>端口复用</title>
    <link>http://example.org/%E5%8D%8A%E5%85%B3%E9%97%AD-%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</link>
    <pubDate>Sun, 05 Mar 2023 08:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8D%8A%E5%85%B3%E9%97%AD-%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</guid>
    <description><![CDATA[半关闭 当TCP连接中A向B发送FIN请求关闭，另一端B回应ACK之后(A端进入FIN_WAIT_2状态)，并没有立即发送FIN给A，A方处于]]></description>
</item>
</channel>
</rss>
