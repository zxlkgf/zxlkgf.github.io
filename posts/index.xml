<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - Cyo&#39;s Website</title>
        <link>http://example.org/posts/</link>
        <description>All Posts | Cyo&#39;s Website</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>z514111073@gmail.com (Cyo)</managingEditor>
            <webMaster>z514111073@gmail.com (Cyo)</webMaster><lastBuildDate>Sun, 05 Mar 2023 14:52:16 &#43;0800</lastBuildDate><atom:link href="http://example.org/posts/" rel="self" type="application/rss+xml" /><item>
    <title>IO多路复用(select,poll,epoll)</title>
    <link>http://example.org/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</link>
    <pubDate>Sun, 05 Mar 2023 14:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/io%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8/</guid>
    <description><![CDATA[IO多路复用 I/O 多路复用使得程序能够同时监听多个文件描述符，能够提高程序的性能，Linux下实现I/O多路复用的系统调用主要有select ，p]]></description>
</item>
<item>
    <title>端口复用</title>
    <link>http://example.org/%E5%8D%8A%E5%85%B3%E9%97%AD-%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</link>
    <pubDate>Sun, 05 Mar 2023 08:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%8D%8A%E5%85%B3%E9%97%AD-%E7%AB%AF%E5%8F%A3%E5%A4%8D%E7%94%A8/</guid>
    <description><![CDATA[半关闭 当TCP连接中A向B发送FIN请求关闭，另一端B回应ACK之后(A端进入FIN_WAIT_2状态)，并没有立即发送FIN给A，A方处于]]></description>
</item>
<item>
    <title>Socket通信</title>
    <link>http://example.org/socket%E9%80%9A%E4%BF%A1/</link>
    <pubDate>Sat, 04 Mar 2023 14:52:16 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/socket%E9%80%9A%E4%BF%A1/</guid>
    <description><![CDATA[TCP通信流程 ! //TCP通信流程 //服务器端(被动接受的角色) 1.创建一个用于监听的套接字 -监听：监听有无客户端连接 -套接字：这个套接字其]]></description>
</item>
<item>
    <title>Socket地址</title>
    <link>http://example.org/socket%E5%9C%B0%E5%9D%80/</link>
    <pubDate>Sat, 04 Mar 2023 12:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/socket%E5%9C%B0%E5%9D%80/</guid>
    <description><![CDATA[socket地址 通用socket地址 socket网络编程接口中表示socket地址的是结构体sockaddr，其定义如下： #include &lt;bits/socket.h&gt; struct sockaddr { sa_family_t sa_family; char sa_data[14];]]></description>
</item>
<item>
    <title>字节序</title>
    <link>http://example.org/%E5%AD%97%E8%8A%82%E5%BA%8F/</link>
    <pubDate>Sat, 04 Mar 2023 08:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%AD%97%E8%8A%82%E5%BA%8F/</guid>
    <description><![CDATA[字节序 现代CPU的累加器一次都能装载至少4字节(32位机器),即一个整数。那么这四个字节在内存中排列的顺序将影响它被累加器装载成的整数的值，]]></description>
</item>
<item>
    <title>线程同步&#43;锁</title>
    <link>http://example.org/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/</link>
    <pubDate>Fri, 03 Mar 2023 09:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5/</guid>
    <description><![CDATA[线程同步 1.线程的主要优势在于，能够通过全局变量来共享信息。不过，这种便捷的共享是有代价的，必须确保多个线程不会同时修改同一个变量，或者某个]]></description>
</item>
<item>
    <title>线程</title>
    <link>http://example.org/%E7%BA%BF%E7%A8%8B/</link>
    <pubDate>Thu, 02 Mar 2023 23:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E7%BA%BF%E7%A8%8B/</guid>
    <description><![CDATA[线程概述 1.与进程(process)类似，线程(thread)是允许应用程序并发执行多个任务的一种机制。一个进程可以包含多个线程。同一个程序]]></description>
</item>
<item>
    <title>共享内存</title>
    <link>http://example.org/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</link>
    <pubDate>Thu, 02 Mar 2023 08:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98/</guid>
    <description><![CDATA[共享内存 1.共享内存允许两个或者多个进程共享物理内存的同一块区域(通常被称为段)。由于一个共享内存段会称为一个进程用户空间的一部分。因此这种]]></description>
</item>
<item>
    <title>守护进程</title>
    <link>http://example.org/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</link>
    <pubDate>Thu, 02 Mar 2023 08:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B/</guid>
    <description><![CDATA[终端 1.在UNIX系统中，用户通过终端登陆系统后得到一个shell进程，这个终端成为shell进程的控制终端(Controlling Term]]></description>
</item>
<item>
    <title>信号</title>
    <link>http://example.org/%E4%BF%A1%E5%8F%B7/</link>
    <pubDate>Wed, 01 Mar 2023 20:55:47 &#43;0800</pubDate>
    <author>Cyo</author>
    <guid>http://example.org/%E4%BF%A1%E5%8F%B7/</guid>
    <description><![CDATA[信号的概念 1.信号是Linux进程间通信的最古老的方式之一，是事件发生时对进程的通知机制，有时也称之为软件中断，它是在软件层次上对中断机制的]]></description>
</item>
</channel>
</rss>
